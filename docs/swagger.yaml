---
swagger: "2.0"
info:
  description: "TopCoder Notifications - Bus API Server"
  version: "1.0.0"
  title: "bus-api"
  contact: {}
host: "localhost:3000"
basePath: "/v5/bus"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
security:
- Bearer: []
paths:
  /events:
    post:
      tags:
      - "Event"
      summary: "Post event"
      description: "Post an event to the message bus."
      consumes: []
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
          required:
          - "topic"
          - "originator"
          - "timestamp"
          - "mime-type"
          - "payload"
          properties:
            topic:
              type: "string"
              description: "topic name should be a dot separated fully qualified\
              \ name i.e. domain.type.operation"
              example: "notifications.action.email.project.topic.created"
            originator:
              type: "string"
              description: "service repository name, from where message is published"
              example: "tc-notifications"
            timestamp:
              type: "string"
              description: "ISO 8601 timestamp at which message is published.\
                \ name"
              example: "2018-04-13T00:00:00"
            mime-type:
              type: "string"
              description: "mime-type for 'payload'"
              example: "application/json"
            payload:
              type: "object"
              description: "actual payload depending on mime-type for consumer"
              example:
                data:
                  subject: "project topic created"
                  name: "xyz"
                recipients:
                - "tc@mailinator.com"
                - "tc2@mailinator.com"
                replyTo: ""
      responses:
        204:
          description: "OK"
        400:
          description: "missing or invalid request, unknown type"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "missing, invalid, or expired token"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "the calling service is not allowed"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "internal server error"
          schema:
            $ref: "#/definitions/Error"
  /topics:
    get:
      tags:
      - "Topic"
      summary: "Get topics"
      description: "Get all topic names."
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "string"
        401:
          description: "missing, invalid, or expired token"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "the calling service is not allowed"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "internal server error"
          schema:
            $ref: "#/definitions/Error"
  /placeholders:
    delete:
      tags:
      - "placeholders"
      summary: "clear cache for placefolder"
      description: "clear the cache for placefolder validation for email topics."
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "string"
        401:
          description: "missing, invalid, or expired token"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "the calling service is not allowed"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "internal server error"
          schema:
            $ref: "#/definitions/Error"
securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  Error:
    type: "object"
    properties:
      message:
        type: "string"
    description: "The error model"
